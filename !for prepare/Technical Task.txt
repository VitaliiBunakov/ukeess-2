Preparation steps:
- https://data.gov.ua/dataset/06779371-308f-42d7-895e-5a39833375f0 - Download information about cars and their owners for 2020 and 2021
- Analyze files data and data structure

Database:
- Create MySQL database with 2 tables - cars and operations
- Cars table columns -  "BRAND";"MODEL";"VIN";"MAKE_YEAR";"COLOR";"KIND";"BODY";"PURPOSE";"FUEL";"CAPACITY";"OWN_WEIGHT";"TOTAL_WEIGHT"
- Operations table columns - "PERSON";"REG_ADDR_KOATUU";"OPER_CODE";"OPER_NAME";"D_REG";"DEP_CODE";"DEP"; "N_REG_NEW"

Main part:
Write NodeJS application that should connect to database and expose single http-endpoint: '/load-cars-operations'

- Endpoint should be able to process CSV files downloaded from data.gov.ua (https://docs.nestjs.com/techniques/file-upload)
- Under the hood it must process the transferred file, compare it against database and create new records if needed

Data comparison scheme:
- Check file VIN property against db cars VIN column and create new record if it doesn't exist
- If car with this vin already exists, just create new record inside operations table
It would be nice to have (NOT REQUIRED):
- As result for /load-cars-operations, would be nice to return statistic for cars that was already in DB. For example: { foundCars: 10, newCars: 100 }
- Some basic unit tests
- Endpoint auth strategy (JWT, Basic Auth, etc)

Requirements:
- Please use MySQL for test task
- Use migrations for database setup
- Use Nest.JS framework
- Put test task in zip format to Google Drive (or equivalent) and send link to download it to jobs@ukeess.com
